package com.ssm.kernel.dao;

import com.ssm.kernel.model.Case;
import com.ssm.kernel.model.CaseWithBLOBs;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface CaseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case
     *
     * @mbg.generated
     */
    @Delete({
        "delete from case",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case
     *
     * @mbg.generated
     */
    @Insert({
        "insert into case (id, case_no, ",
        "case_name, case_type_id, ",
        "case_type_id_2, case_status, ",
        "start_time, end_time, ",
        "address_name, address_longitude, ",
        "address_latitude, modus_operandi, ",
        "suspect_num, area_id, ",
        "handle_department_id, register_time, ",
        "report_time, report_person, ",
        "report_phone, area_department_id, ",
        "illegal_person_exist, victim_person_exists, ",
        "break_time, withdraw_time, ",
        "find_time, find_address_name, ",
        "find_address_description, create_department_id, ",
        "create_user_id, create_user_name, ",
        "create_time, update_user_id, ",
        "update_user_name, update_time, ",
        "handle_user_ids, handle_user_names, ",
        "description)",
        "values (#{id,jdbcType=INTEGER}, #{caseNo,jdbcType=VARCHAR}, ",
        "#{caseName,jdbcType=VARCHAR}, #{caseTypeId,jdbcType=INTEGER}, ",
        "#{caseTypeId2,jdbcType=INTEGER}, #{caseStatus,jdbcType=VARCHAR}, ",
        "#{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, ",
        "#{addressName,jdbcType=VARCHAR}, #{addressLongitude,jdbcType=REAL}, ",
        "#{addressLatitude,jdbcType=REAL}, #{modusOperandi,jdbcType=VARCHAR}, ",
        "#{suspectNum,jdbcType=INTEGER}, #{areaId,jdbcType=INTEGER}, ",
        "#{handleDepartmentId,jdbcType=INTEGER}, #{registerTime,jdbcType=TIMESTAMP}, ",
        "#{reportTime,jdbcType=TIMESTAMP}, #{reportPerson,jdbcType=VARCHAR}, ",
        "#{reportPhone,jdbcType=VARCHAR}, #{areaDepartmentId,jdbcType=INTEGER}, ",
        "#{illegalPersonExist,jdbcType=VARCHAR}, #{victimPersonExists,jdbcType=VARCHAR}, ",
        "#{breakTime,jdbcType=TIMESTAMP}, #{withdrawTime,jdbcType=TIMESTAMP}, ",
        "#{findTime,jdbcType=TIMESTAMP}, #{findAddressName,jdbcType=VARCHAR}, ",
        "#{findAddressDescription,jdbcType=VARCHAR}, #{createDepartmentId,jdbcType=INTEGER}, ",
        "#{createUserId,jdbcType=INTEGER}, #{createUserName,jdbcType=VARCHAR}, ",
        "#{createTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=INTEGER}, ",
        "#{updateUserName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, ",
        "#{handleUserIds,jdbcType=LONGVARCHAR}, #{handleUserNames,jdbcType=LONGVARCHAR}, ",
        "#{description,jdbcType=LONGVARCHAR})"
    })
    int insert(CaseWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case
     *
     * @mbg.generated
     */
    int insertSelective(CaseWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, case_no, case_name, case_type_id, case_type_id_2, case_status, start_time, ",
        "end_time, address_name, address_longitude, address_latitude, modus_operandi, ",
        "suspect_num, area_id, handle_department_id, register_time, report_time, report_person, ",
        "report_phone, area_department_id, illegal_person_exist, victim_person_exists, ",
        "break_time, withdraw_time, find_time, find_address_name, find_address_description, ",
        "create_department_id, create_user_id, create_user_name, create_time, update_user_id, ",
        "update_user_name, update_time, handle_user_ids, handle_user_names, description",
        "from case",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("com.ssm.kernel.dao.CaseMapper.ResultMapWithBLOBs")
    CaseWithBLOBs selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(CaseWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case
     *
     * @mbg.generated
     */
    @Update({
        "update case",
        "set case_no = #{caseNo,jdbcType=VARCHAR},",
          "case_name = #{caseName,jdbcType=VARCHAR},",
          "case_type_id = #{caseTypeId,jdbcType=INTEGER},",
          "case_type_id_2 = #{caseTypeId2,jdbcType=INTEGER},",
          "case_status = #{caseStatus,jdbcType=VARCHAR},",
          "start_time = #{startTime,jdbcType=TIMESTAMP},",
          "end_time = #{endTime,jdbcType=TIMESTAMP},",
          "address_name = #{addressName,jdbcType=VARCHAR},",
          "address_longitude = #{addressLongitude,jdbcType=REAL},",
          "address_latitude = #{addressLatitude,jdbcType=REAL},",
          "modus_operandi = #{modusOperandi,jdbcType=VARCHAR},",
          "suspect_num = #{suspectNum,jdbcType=INTEGER},",
          "area_id = #{areaId,jdbcType=INTEGER},",
          "handle_department_id = #{handleDepartmentId,jdbcType=INTEGER},",
          "register_time = #{registerTime,jdbcType=TIMESTAMP},",
          "report_time = #{reportTime,jdbcType=TIMESTAMP},",
          "report_person = #{reportPerson,jdbcType=VARCHAR},",
          "report_phone = #{reportPhone,jdbcType=VARCHAR},",
          "area_department_id = #{areaDepartmentId,jdbcType=INTEGER},",
          "illegal_person_exist = #{illegalPersonExist,jdbcType=VARCHAR},",
          "victim_person_exists = #{victimPersonExists,jdbcType=VARCHAR},",
          "break_time = #{breakTime,jdbcType=TIMESTAMP},",
          "withdraw_time = #{withdrawTime,jdbcType=TIMESTAMP},",
          "find_time = #{findTime,jdbcType=TIMESTAMP},",
          "find_address_name = #{findAddressName,jdbcType=VARCHAR},",
          "find_address_description = #{findAddressDescription,jdbcType=VARCHAR},",
          "create_department_id = #{createDepartmentId,jdbcType=INTEGER},",
          "create_user_id = #{createUserId,jdbcType=INTEGER},",
          "create_user_name = #{createUserName,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_user_id = #{updateUserId,jdbcType=INTEGER},",
          "update_user_name = #{updateUserName,jdbcType=VARCHAR},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP},",
          "handle_user_ids = #{handleUserIds,jdbcType=LONGVARCHAR},",
          "handle_user_names = #{handleUserNames,jdbcType=LONGVARCHAR},",
          "description = #{description,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKeyWithBLOBs(CaseWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case
     *
     * @mbg.generated
     */
    @Update({
        "update case",
        "set case_no = #{caseNo,jdbcType=VARCHAR},",
          "case_name = #{caseName,jdbcType=VARCHAR},",
          "case_type_id = #{caseTypeId,jdbcType=INTEGER},",
          "case_type_id_2 = #{caseTypeId2,jdbcType=INTEGER},",
          "case_status = #{caseStatus,jdbcType=VARCHAR},",
          "start_time = #{startTime,jdbcType=TIMESTAMP},",
          "end_time = #{endTime,jdbcType=TIMESTAMP},",
          "address_name = #{addressName,jdbcType=VARCHAR},",
          "address_longitude = #{addressLongitude,jdbcType=REAL},",
          "address_latitude = #{addressLatitude,jdbcType=REAL},",
          "modus_operandi = #{modusOperandi,jdbcType=VARCHAR},",
          "suspect_num = #{suspectNum,jdbcType=INTEGER},",
          "area_id = #{areaId,jdbcType=INTEGER},",
          "handle_department_id = #{handleDepartmentId,jdbcType=INTEGER},",
          "register_time = #{registerTime,jdbcType=TIMESTAMP},",
          "report_time = #{reportTime,jdbcType=TIMESTAMP},",
          "report_person = #{reportPerson,jdbcType=VARCHAR},",
          "report_phone = #{reportPhone,jdbcType=VARCHAR},",
          "area_department_id = #{areaDepartmentId,jdbcType=INTEGER},",
          "illegal_person_exist = #{illegalPersonExist,jdbcType=VARCHAR},",
          "victim_person_exists = #{victimPersonExists,jdbcType=VARCHAR},",
          "break_time = #{breakTime,jdbcType=TIMESTAMP},",
          "withdraw_time = #{withdrawTime,jdbcType=TIMESTAMP},",
          "find_time = #{findTime,jdbcType=TIMESTAMP},",
          "find_address_name = #{findAddressName,jdbcType=VARCHAR},",
          "find_address_description = #{findAddressDescription,jdbcType=VARCHAR},",
          "create_department_id = #{createDepartmentId,jdbcType=INTEGER},",
          "create_user_id = #{createUserId,jdbcType=INTEGER},",
          "create_user_name = #{createUserName,jdbcType=VARCHAR},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "update_user_id = #{updateUserId,jdbcType=INTEGER},",
          "update_user_name = #{updateUserName,jdbcType=VARCHAR},",
          "update_time = #{updateTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Case record);
}